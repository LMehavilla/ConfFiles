1. Raspberry Imager -> instalar la 32 bit sin escritorio
	https://www.raspberrypi.com/software/
	
2. Ejecutar archivo arm64.sh que actualiza del 32 a 64 bit

    #!/bin/bash
    clear ; echo "[Adding arm64 architecture...]";
    sudo rpi-update
    if ! grep "arm_64bit=1" "/boot/config.txt"; then echo "arm_64bit=1" | sudo tee -a /boot/config.txt; fi
    sudo dpkg --add-architecture arm64
    apt update -y
    apt upgrade -y
    #setupRepo ;
    #sudo apt -y install ntp
    #installCorelight
    #echo "[Success] Need to reboot. [Press Enter to reboot.]" ; read DUMMY ;
    sudo reboot

3. Requisitos de Zeek
	apt-get install cmake make gcc g++ flex libfl-dev bison libpcap-dev libssl-dev python3 python3-dev swig zlib1g-dev
	
4. Install Zeek con el paquete debian 
	https://unizares-my.sharepoint.com/:u:/g/personal/755621_unizar_es/EQ-Pdyomq6VEiPJuLIfD16oBVT-ipudw66NLTZDXemFttQ?e=3vxzmb
	
	dpkg -i zeek_5.1.1_armhf.deb
	
	ethtool -K eth0 gro off rx off tx off gso off
	
5. Instalacion de af_packet en Zeek
	apt install python3-venv python3-pip
	pip3 install GitPython semantic-version --user
	export PATH=/usr/local/zeek/bin:$PATH
	zeekctl stop	
	zkg autoconfig
	apt-get install raspberrypi-kernel-headers
	zkg install zeek/zeek/zeek-af_packet-plugin

6. Ficheros de configuracion de Zeek (node.cfg y zeekctl.cfg)
	Node es para generar el cluster de nodos de análisis de Zeek y zeekctl se le añade un filtro para evitar analizar retransmisiones
	ya que se va a realizar el spoof
	
7. Explicación de site/local.zeek para añadir los scripts y poner el formato en json
	Colocar scripts en /usr/local/zeek/share/zeek/policy/custom-scripts
	
	@load policy/tuning/json-logs.zeek
	@load protocols/dhcp/software
	
	@load custom-scripts/was_machine_broker_ip
	
8. Pantalla Oled
	Colocar pantalla
		Pantalla - pin raspi
			GND pin 14
			Vcc pin17
			SCL pin 5
			SDA pin 3
		
	Comandos para instalar libreriás
		apt install git
		python -m pip install --upgrade pip setuptools wheel
		git clone https://github.com/adafruit/Adafruit_Python_SSD1306.git
		cd Adafruit_Python_SSD1306
		sudo python setup.py install

	Script display.sh para mostrar ip por pantalla y comando crontab para que 60 segundos despues de encender la raspi
	ejecutes display.sh (es necesario el tiempo porque si no la ip aun no ha sido asignada y peta el script)
		@reboot sleep 60 && /usr/bin/python3 /home/pi/display.py &
		
9. Script de Spoof para realizar el spoofing a todos los elementos de tu red y que crean que la raspi es el router
	
10. healtCheck.sh para mirar CPU y MEM en raspberry 
* Poner en hora raspberry con raspi-config
